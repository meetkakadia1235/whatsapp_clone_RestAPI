package com.api.dao;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Repository;

import com.api.model.RegistrationVO;
import com.api.model.messageVO;


@Repository
public class RegisterDAOImpl implements RegisterDAO {

	@Autowired
	private SessionFactory sessionFactory;

	public void insert(RegistrationVO registerVO) {
		try {
			Session session = sessionFactory.getCurrentSession();
			session.saveOrUpdate(registerVO);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	
	
	public List<RegistrationVO> search(RegistrationVO registerVO) {
		List<RegistrationVO> registerList = new ArrayList<RegistrationVO>();
		try {
			Session session = sessionFactory.getCurrentSession();
			Query query = session.createQuery("select username , id from RegistrationVO where status = true and username LIKE '"+registerVO.getUsername()+"%'");
			registerList = query.list();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return registerList;
	}

	
	public List<RegistrationVO> findById(int id) {
		List<RegistrationVO> registerList = new ArrayList<RegistrationVO>();
		try {
			Session session = sessionFactory.getCurrentSession();
			Query query = session.createQuery("from RegistrationVO where status = true and id = " + id);
			registerList = (List<RegistrationVO>) query.list();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return registerList;
	}



	public List<RegistrationVO> login(RegistrationVO rvo) {
		List<RegistrationVO> registerList = new ArrayList<RegistrationVO>();
		try {
			Session session = sessionFactory.getCurrentSession();
			Query query = session.createQuery("from RegistrationVO where status = true and username='"+rvo.getUsername()+"' and password='"+rvo.getPassword()+"'");
			registerList = query.list();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return registerList;
	}

	public void sendMessages(messageVO mvo) {
		try {
			Session session = sessionFactory.getCurrentSession();
			session.saveOrUpdate(mvo);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}


	public void deleteMessage(messageVO mvo) {
		try {
			Session session = sessionFactory.getCurrentSession();
			session.saveOrUpdate(mvo);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}



	public List<messageVO> getMessages(messageVO mvo) {
		List<messageVO> registerList = new ArrayList<messageVO>();
		try {
			Session session = sessionFactory.getCurrentSession();
			Query query = session.createQuery("from messageVO where status = true and (from_id='"+mvo.getId()+"' or to_id='"+mvo.getId()+"') ORDER BY id DESC");
			registerList = query.list();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return registerList;
	}
}